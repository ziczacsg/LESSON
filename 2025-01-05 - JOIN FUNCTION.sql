
USE RISK_PORTFOLIO

--VÍ DỤ 


-- Tạo bảng DIM_CUSTOMER_PROFILE với dữ liệu mẫu

IF OBJECT_ID ('TEMPDB..[#DIM_CUSTOMER_PROFILE]','U') IS NOT NULL DROP TABLE [#DIM_CUSTOMER_PROFILE]

CREATE TABLE [#DIM_CUSTOMER_PROFILE] (
    LOAN_ACCOUNT_NUMBER VARCHAR(10),
    CUSTOMER_NAME NVARCHAR(100),
    PRODUCT_NAME VARCHAR(20),
    REGION VARCHAR(10)
);

-- Tạo bảng FACT_LOAN_MANAGEMENT với dữ liệu mẫu

IF OBJECT_ID ('TEMPDB..[#FACT_LOAN_MANAGEMENT]','U') IS NOT NULL DROP TABLE [#FACT_LOAN_MANAGEMENT]

CREATE TABLE [#FACT_LOAN_MANAGEMENT] (
    LOAN_ACCOUNT_NUMBER VARCHAR(10),
    REPORT_DATE DATE,
    DPD INT,
    DPD_BUCKET VARCHAR(5),
    OUTSTANDING_AMOUNT DECIMAL(18,2)
);

-- Chèn dữ liệu mẫu vào DIM_CUSTOMER_PROFILE
INSERT INTO [#DIM_CUSTOMER_PROFILE] VALUES
('LOAN001', N'Nguyễn Văn A', 'T-Titanium', 'North'),
('LOAN002', N'Trần Thị B', 'VAY_PLUS', 'South'),
('LOAN003', N'Lê Văn C', 'B-BROWN', 'Central'),
('LOAN004', N'Phạm Thị D', 'G-Gold', 'North');

-- Chèn dữ liệu mẫu vào FACT_LOAN_MANAGEMENT
INSERT INTO [#FACT_LOAN_MANAGEMENT] VALUES
('LOAN001', '2023-12-31', 0, 'B0', 50000000),
('LOAN002', '2023-12-31', 35, 'B1', 30000000),
('LOAN003', '2023-12-31', 65, 'B2', 40000000),
('LOAN005', '2023-12-31', 90, 'B3', 60000000);


SELECT * FROM [#DIM_CUSTOMER_PROFILE]

SELECT * FROM [#FACT_LOAN_MANAGEMENT]

/*

SELECT *
FROM [TABLE A] X1 --PHẢI ĐẶT TÊN BẢNG A
JOIN FUNCTIONS (INNER JOIN/LEFT JOIN/RIGHT JOIN/FULL JOIN)
     [TABLE B] X2 --PHẢI ĐẶT TÊN BẢNG B 
	 ON --THỦ TỤC MAPPING X1.COLUMN (TABLE A) = X2.COLUMN (TABLE B)
JOIN FUNCTIONS (INNER JOIN/LEFT JOIN/RIGHT JOIN/FULL JOIN)
     [TABLE C] X3 --PHẢI ĐẶT TÊN BẢNG C
     ON --THỦ TỤC MAPPING X1.COLUMN (TABLE A) = X3.COLUMN (TABLE C)
JOIN FUNCTIONS (INNER JOIN/LEFT JOIN/RIGHT JOIN/FULL JOIN)
     N....................LẦN NHIỀU BẢNG TIẾP THEO TÙY NHU CẦU PHÂN TÍCH MUỐN LẤY BAO NHIÊU BIẾN


*/


-- 1. INNER JOIN: Chỉ hiển thị những khách hàng có dữ liệu nợ
SELECT  
        cp.LOAN_ACCOUNT_NUMBER,
		cp.CUSTOMER_NAME,
		cp.PRODUCT_NAME,
		fm.DPD,
		fm.DPD_BUCKET
FROM [#DIM_CUSTOMER_PROFILE] cp
INNER JOIN [#FACT_LOAN_MANAGEMENT] fm 
ON cp.LOAN_ACCOUNT_NUMBER = fm.LOAN_ACCOUNT_NUMBER

-- Kết quả sẽ chỉ hiển thị LOAN001, LOAN002, LOAN003 vì chúng tồn tại ở cả hai bảng

SELECT * FROM [#DIM_CUSTOMER_PROFILE]

SELECT * FROM [#FACT_LOAN_MANAGEMENT]


-- 2. LEFT JOIN: Hiển thị tất cả khách hàng và dữ liệu nợ (nếu có)
SELECT 
        cp.LOAN_ACCOUNT_NUMBER,
		cp.CUSTOMER_NAME,
		cp.PRODUCT_NAME,
		fm.DPD as DPD,
		fm.DPD_BUCKET as DPD_BUCKET
FROM [#DIM_CUSTOMER_PROFILE] cp
LEFT JOIN [#FACT_LOAN_MANAGEMENT] fm ON cp.LOAN_ACCOUNT_NUMBER = fm.LOAN_ACCOUNT_NUMBER;

-- Kết quả sẽ hiển thị cả LOAN004 với DPD = 0 và DPD_BUCKET = 'N/A'

-- 3. RIGHT JOIN: Hiển thị tất cả dữ liệu nợ và thông tin khách hàng (nếu có)
SELECT 
        fm.LOAN_ACCOUNT_NUMBER,
	    cp.LOAN_ACCOUNT_NUMBER,
		cp.CUSTOMER_NAME,
		cp.PRODUCT_NAME,
		fm.DPD as DPD,
		fm.DPD_BUCKET as DPD_BUCKET
FROM [#DIM_CUSTOMER_PROFILE] cp
RIGHT JOIN [#FACT_LOAN_MANAGEMENT] fm ON cp.LOAN_ACCOUNT_NUMBER = fm.LOAN_ACCOUNT_NUMBER;

-- Kết quả sẽ hiển thị cả LOAN005 với CUSTOMER_NAME = 'Unknown'

-- 3. FULL JOIN: Hiển thị tất cả dữ liệu nợ và thông tin khách hàng (nếu có)
SELECT 
        cp.LOAN_ACCOUNT_NUMBER,
		cp.CUSTOMER_NAME,
		cp.PRODUCT_NAME,
        fm.LOAN_ACCOUNT_NUMBER,
		fm.DPD as DPD,
		fm.DPD_BUCKET as DPD_BUCKET
FROM [#DIM_CUSTOMER_PROFILE] cp
FULL JOIN [#FACT_LOAN_MANAGEMENT] fm ON cp.LOAN_ACCOUNT_NUMBER = fm.LOAN_ACCOUNT_NUMBER;


